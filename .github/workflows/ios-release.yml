name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/foka.ipa"
          APPLE_ID: "sunshine50555@outlook.com"
          APP_SPECIFIC_PASSWORD: "tguj-nwbi-hnyn-ifuv"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
